name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ['1.24.x']
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
        cache: true

    - name: Verify dependencies
      run: |
        go mod download
        go mod verify

    - name: Check formatting
      run: make fmt-check
      if: matrix.os == 'ubuntu-latest'  # Only check formatting on one OS

    - name: Run linting
      run: make lint-check
      if: matrix.os == 'ubuntu-latest'  # Only lint on one OS

    - name: Run tests
      run: make test

    - name: Build
      run: make build

    - name: Upload binary
      uses: actions/upload-artifact@v4
      with:
        name: cctop-${{ matrix.os }}-${{ matrix.go-version }}
        path: |
          cctop
          cctop.exe

  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.x'
        cache: true

    - name: Run tests with coverage
      run: make test-coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: |
          coverage.out
          coverage.html

  dependency-check:
    name: Check Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.x'
        cache: true

    - name: Check for dependency updates
      run: |
        go list -u -m all

    - name: Check for security vulnerabilities
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./...